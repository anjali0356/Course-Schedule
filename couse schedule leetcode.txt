class Solution {
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        List<List<Integer>>graph=new ArrayList<>();
        for(int i=0;i<numCourses;i++){
            graph.add(new ArrayList<>());
        }
        for(int[] pair:prerequisites){
            int course=pair[0];
â€¦    }
    private boolean hasCycle(int course,int[]visited,List<List<Integer>>graph){
        if(visited[course]==1){
            return true;
  }
        visited[course]=1;
        for(int prerequisite:graph.get(course)){
            if(hasCycle(prerequisite,visited,graph)){
                return true;
            }
        }
        visited[course]=2;
        return false;
    }
}